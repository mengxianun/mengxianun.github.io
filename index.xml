<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Academic</title>
    <link>/</link>
      <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <description>Academic</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Fri, 15 May 2020 17:37:27 +0800</lastBuildDate>
    <image>
      <url>/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>Academic</title>
      <link>/</link>
    </image>
    
    <item>
      <title>Helm安装MySQL</title>
      <link>/posts/helm%E5%AE%89%E8%A3%85mysql/</link>
      <pubDate>Fri, 15 May 2020 17:37:27 +0800</pubDate>
      <guid>/posts/helm%E5%AE%89%E8%A3%85mysql/</guid>
      <description>&lt;p&gt;helm 安装MySQL&lt;/p&gt;
&lt;p&gt;1 创建storageClass&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: mysql-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;2 创建PersistentVolume&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-storage
spec:
  capacity:
    storage: 10Gi
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: mysql-storage
  local:
    path: /db/mysql
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - node1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;3 安装MySQL，设置storageClassName属性&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;helm install my-mysql --set persistence.storageClass=mysql-storage stable/mysql
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Docker</title>
      <link>/posts/docker/</link>
      <pubDate>Wed, 13 May 2020 17:56:03 +0800</pubDate>
      <guid>/posts/docker/</guid>
      <description>&lt;h3 id=&#34;安装centos&#34;&gt;安装(CentOS)&lt;/h3&gt;
&lt;p&gt;1 更新Yum&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo yum update
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;2 添加docker仓库并安装docker&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;curl -fsSL https://get.docker.com/ | sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;3 启动docker&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo systemctl start docker
sudo systemctl enable docker
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://geekflare.com/docker-installation-guide/&#34;&gt;https://geekflare.com/docker-installation-guide/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hugo Github Pages</title>
      <link>/posts/hugo-github-pages/</link>
      <pubDate>Wed, 13 May 2020 15:45:43 +0800</pubDate>
      <guid>/posts/hugo-github-pages/</guid>
      <description>&lt;h3 id=&#34;安装&#34;&gt;安装&lt;/h3&gt;
&lt;p&gt;1 在github上创建仓库&amp;lt;USERNAME&amp;gt;.github.io&lt;/p&gt;
&lt;p&gt;2 
&lt;a href=&#34;https://github.com/sourcethemes/academic-kickstart#fork-destination-box&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;fork&lt;/strong&gt;&lt;/a&gt; &lt;em&gt;Academic Kickstart&lt;/em&gt; 仓库，并clone到本地（替换你的用户名）。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/&amp;lt;USERNAME&amp;gt;/academic-kickstart.git My_Website
cd My_Website
git submodule update --init --recursive
git submodule add -f -b master https://github.com/&amp;lt;USERNAME&amp;gt;/&amp;lt;USERNAME&amp;gt;.github.io.git public
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;3 将所有内容添加到本地 git 存储库，并将其推送到 GitHub 上的远程存储库:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git add .
git commit -m &amp;quot;Initial commit&amp;quot;
git push -u origin master
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;4 通过运行 Hugo 重新生成网站的 HTML 代码，并将 public 子模块上传到 GitHub:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hugo
cd public
git add .
git commit -m &amp;quot;Build website&amp;quot;
git push origin master
cd ..
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;5 通过浏览器访问 https://&lt;USERNAME&gt;.github.io&lt;/p&gt;
&lt;h3 id=&#34;添加内容&#34;&gt;添加内容&lt;/h3&gt;
&lt;p&gt;1 创建文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hugo new posts/my-first-post.md
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;2 部署脚本 deploy.sh&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/sh

# If a command fails then the deploy stops
set -e

printf &amp;quot;\033[0;32mDeploying updates to GitHub...\033[0m\n&amp;quot;

# Build the project.
hugo # if using a theme, replace with `hugo -t &amp;lt;YOURTHEME&amp;gt;`

# Go To Public folder
cd public

# Add changes to git.
git add .

# Commit changes.
msg=&amp;quot;rebuilding site $(date)&amp;quot;
if [ -n &amp;quot;$*&amp;quot; ]; then
	msg=&amp;quot;$*&amp;quot;
fi
git commit -m &amp;quot;$msg&amp;quot;

# Push source and build repos.
git push origin master
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;3 更新网站&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./deploy.sh &amp;quot;Your optional commit message&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://georgecushen.com/create-your-website-with-hugo/&#34;&gt;https://georgecushen.com/create-your-website-with-hugo/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/deployment/&#34;&gt;https://sourcethemes.com/academic/docs/deployment/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
